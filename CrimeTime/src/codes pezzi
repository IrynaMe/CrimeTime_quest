System.out.println("--------------------------------------------");
System.out.println("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");



===================triangle
    for (int i=0; i<3;i++) {
             System.out.println("     *      #      .  ");
             System.out.println("    ***    ###    ... ");
             System.out.println("   *****  #####  .....");
             if (i<2){
                 System.out.println("+");
             }

         }
         System.out.println("   ___________________");
         System.out.println();
         System.out.println("     .      .      .  ");
         System.out.println("    ...    ...    ... ");
         System.out.println("   .....  .....  .....");

=====================


 public static void main(String[] args) {
        int gridSize = 3; // Number of squares in each row/column
        int subSquareSize = 1; // Number of subsquares in each square

        for (int i = 0; i < gridSize; i++) {
            // Draw the top edge of each square
            for (int j = 0; j < gridSize; j++) {
                System.out.print("+---");
            }
            System.out.println("+");

            // Draw the middle rows of each square
            for (int k = 0; k < subSquareSize; k++) {
                for (int j = 0; j < gridSize; j++) {
                    System.out.print("|   ");
                }
                System.out.println("|");
            }
        }

        // Draw the bottom edge of the last square
        for (int j = 0; j < gridSize; j++) {
            System.out.print("+---");
        }
        System.out.println("+");
    }



===
with letters:
  int gridSize = 3; // Number of squares in each row/column
        int subSquareSize = 1; // Number of subsquares in each square

        // Array of letters to be printed in each cell, nested from top left to bottom right
        char[] letters = {'o', 'b', 'r', 't', 'a', 'c', 'e', 'u', 's'};
        int letterIndex = 0;

        for (int i = 0; i < gridSize; i++) {
            // Draw the top edge of each square
            for (int j = 0; j < gridSize; j++) {
                System.out.print("+---");
            }
            System.out.println("+");

            // Draw the middle rows of each square
            for (int k = 0; k < subSquareSize; k++) {
                for (int j = 0; j < gridSize; j++) {
                    System.out.print("| " + letters[letterIndex++] + " ");
                }
                System.out.println("|");
            }
        }

        // Draw the bottom edge of the last square
        for (int j = 0; j < gridSize; j++) {
            System.out.print("+---");
        }
        System.out.println("+");






=====================menu old

  boolean flag = choice.equals("1") || choice.equals("2") || choice.equals("3") || choice.equals("4") || choice.equals("5");
            switch (choice) {
                case "1":
                    goSister(currentTime);
                    break;
                case "2":
                    goBoss(currentTime);
                    break;
                case "3":
                    goAssistant(currentTime);
                    break;
                case "4":
                    seeNotes();
                    break;
                case "5":
                    seeEvidence();
                    break;
                case "6":
                    solvePuzzle();
                    break;
                default:
                    System.out.println();
                    System.out.println("*** Input error: type a number between 1 and 5 ***");
            }

        } while (!flag);



===personaggi
victim=Ruth
sister=Angela
boss=Mr. Green
collector=Mr. Rogers
assistant=John
grandmother=Mrs. Jenkins